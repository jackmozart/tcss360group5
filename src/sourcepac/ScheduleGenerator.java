package sourcepac;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

/**
 * The ScheduleGenerator class
 * @author Chris Davidson
 * @version 5/16/2011
 *
 */
public class ScheduleGenerator {
  
  /**
   * The Schedule being generated by this class.  Contains a title
   * and courses read in from a .csv file.
   */
  private Schedule my_schedule;

  public ScheduleGenerator() {
    my_schedule = new Schedule();
  }
  
  /**
   * Imports a schedule from a .csv file in the specified
   * format for constraints checking.
   * @pre fileName represents a valid, existing file containing 
   *      a correctly formatted schedule.
   * @post A Schedule in the format readable by the program. 
   * @param fileName The name of the file for importing.
   */
  public void importSchedule(String fileName) {
    final File inputSchedule = new File(fileName);
    Scanner in = null;
    String current = "";
    String[] line = new String[8];
    CourseCopy course;
    try {
      in = new Scanner(inputSchedule);
    } catch (FileNotFoundException exception) {
      System.err.println("File not found");
    }
    while(in.hasNext()) {
      current = in.nextLine();
      if(!current.startsWith("%")) {
        break; // Skip all of the comments
      }
    }
    my_schedule.setTitle(current.substring(0, current.indexOf(',')));
    if(in.hasNext()) { // Skip the column headers
      current = in.nextLine();
    }
    while (in.hasNext()) {
      current = in.nextLine();
      line = current.split(",");
      course = new CourseCopy(line[0], line[1], line[2], 
                              Integer.parseInt(line[7]),
                              Integer.parseInt(line[5]),
                              Integer.parseInt(line[6]), line[3],
                              parseDays(line[4]));
      my_schedule.addCourse(course);
    }
  }

  /**
   * This method takes weekdays in the given format and
   * stores them in a format useful to constraints checking.
   * @pre days represents days of the week in the format specified
   *      and contains "TBA" if no days are presently scheduled.
   * @post A representation of the days the given course is taught.
   * @param days The String representing the days taught.
   * @return A boolean[] with appropriate values for the
   *         days taught.
   */
  private boolean[] parseDays(String days) {
    boolean[] week = new boolean[7];
    if(days.contains("TBA")) {
      return week;
    } else {
      for(int i = 0; i < days.length(); i++) {
        switch(days.charAt(i)) {
          case 'N':
            week[0] = true;
            break;
          case 'M':
            week[1] = true;
            break;
          case 'T':
            week[2] = true;
            break;
          case 'W':
            week[3] = true;
            break;
          case 'R':
            week[4] = true;
            break;
          case 'F':
            week[5] = true;
            break;
          case 'S':
            week[6] = true;
        }
      }
      return week;
    }
  }

  /**
   * Getter method for the Schedule being generated.  Contains no
   * relevant information if no Schedule has been imported.
   * @return The Schedule, generated or not.
   */
  public Schedule getSchedule() {
    return my_schedule;
  }

}
